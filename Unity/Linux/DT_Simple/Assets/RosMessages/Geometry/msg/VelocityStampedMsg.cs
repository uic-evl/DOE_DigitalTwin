//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Geometry
{
    [Serializable]
    public class VelocityStampedMsg : Message
    {
        public const string k_RosMessageName = "geometry_msgs/VelocityStamped";
        public override string RosMessageName => k_RosMessageName;

        //  This expresses the timestamped velocity vector of a frame 'body_frame_id' in the reference frame 'reference_frame_id' expressed from arbitrary observation frame 'header.frame_id'.
        //  - If the 'body_frame_id' and 'header.frame_id' are identical, the velocity is observed and defined in the local coordinates system of the body
        //    which is the usual use-case in mobile robotics and is also known as a body twist.
        public Std.HeaderMsg header;
        public string body_frame_id;
        public string reference_frame_id;
        public TwistMsg velocity;

        public VelocityStampedMsg()
        {
            this.header = new Std.HeaderMsg();
            this.body_frame_id = "";
            this.reference_frame_id = "";
            this.velocity = new TwistMsg();
        }

        public VelocityStampedMsg(Std.HeaderMsg header, string body_frame_id, string reference_frame_id, TwistMsg velocity)
        {
            this.header = header;
            this.body_frame_id = body_frame_id;
            this.reference_frame_id = reference_frame_id;
            this.velocity = velocity;
        }

        public static VelocityStampedMsg Deserialize(MessageDeserializer deserializer) => new VelocityStampedMsg(deserializer);

        private VelocityStampedMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.body_frame_id);
            deserializer.Read(out this.reference_frame_id);
            this.velocity = TwistMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.body_frame_id);
            serializer.Write(this.reference_frame_id);
            serializer.Write(this.velocity);
        }

        public override string ToString()
        {
            return "VelocityStampedMsg: " +
            "\nheader: " + header.ToString() +
            "\nbody_frame_id: " + body_frame_id.ToString() +
            "\nreference_frame_id: " + reference_frame_id.ToString() +
            "\nvelocity: " + velocity.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
